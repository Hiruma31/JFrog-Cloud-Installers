{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "db_user": {
      "type": "string",
      "defaultValue": "xray",
      "minLength": 1
    },
    "db_password": {
      "type": "securestring"
    },
    "db_server": {
      "type": "string",
      "defaultValue": "xraypostgressrv",
      "minLength": 1
    },
    "db_name": {
      "type": "string",
      "defaultValue": "artrtdb",
      "minLength": 1
    },
    "db_location": {
      "type": "string"
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 2
    },
    "skuFamily": {
      "type": "string",
      "defaultValue": "Gen5"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard_D2ds_v4"
    },
    "storageSizeGB": {
      "type": "int",
      "defaultValue": 128
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "GeneralPurpose"
    },
    "version": {
      "type": "string",
      "defaultValue": "11"
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 7
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled"
    },
    "databases": {
      "type": "object"
    },
    "sslEnforcement": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Disabled",
      "metadata": {
        "description": "SSL Enforcement"
      }
    },
    "publicNetworkAccess": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Public Network Access"
      }
    },
    "db_edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "manual_db_url": {
      "type": "string"
    },
    "naming_in_fix": {
      "type": "string"
    },
    "nsg_name": {
      "type": "string"
    },
    "virtual_network_name": {
      "type": "string"
    }
  },
  "variables": {
    "subnetDbPrefix": "10.0.3.0/24",
    "subnetDbName": "[concat(parameters('naming_in_fix'), 'dbSubnet')]",
    "postgres_db_user": "[parameters('db_user')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('virtual_network_name'), variables('subnetDbName'))]",
      "properties": {
        "addressPrefix": "[variables('subnetDbPrefix')]",
        "delegations": [
          {
            "name": "dlg-Microsoft.DBforPostgreSQL-flexibleServers",
            "properties": {
              "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('db_server'), '.private.postgres.database.azure.com')]",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('db_server'), '.private.postgres.database.azure.com/vLink')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones/', concat(parameters('db_server'), '.private.postgres.database.azure.com'))]"
      ],
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtual_network_name'))]"
        },
        "registrationEnabled": false
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2021-06-01",
      "name": "[parameters('db_server')]",
      "location": "[parameters('db_location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones/', concat(parameters('db_server'), '.private.postgres.database.azure.com'))]",
        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks/', concat(parameters('db_server'), '.private.postgres.database.azure.com'), 'vLink')]"
      ],
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]"
      },
      "properties": {
        "administratorLogin": "[parameters('db_user')]",
        "administratorLoginPassword": "[parameters('db_password')]",
        "availabilityZone": "",
        "Backup": {
          "backupRetentionDays": "[parameters('backupRetentionDays')]",
          "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        },
        "highAvailability": {
          "mode": "Disabled",
          "standbyAvailabilityZone": ""
        },
        "Storage": {
          "StorageSizeGB": "[parameters('storageSizeGB')]"
        },
        "version": "[parameters('version')]",
        "Network": {
          "DelegatedSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtual_network_name'), variables('subnetDbName'))]",
          "PrivateDnsZoneResourceId": "[resourceId('Microsoft.Network/privateDnsZones/', concat(parameters('db_server'), '.private.postgres.database.azure.com'))]",
          "PrivateDnsZoneArmResourceId": "[resourceId('Microsoft.Network/privateDnsZones/', concat(parameters('db_server'), '.private.postgres.database.azure.com'))]"
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('db_server'), '/require_secure_transport')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('db_server'))]"
      ],
      "properties": {
        "value": "OFF",
        "source": "user-override"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('db_server'), '/', parameters('databases').properties[0].name)]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('db_server'))]"
      ],
      "properties": {
        "charset": "[parameters('databases').properties[0].charset]",
        "collation": "[parameters('databases').properties[0].collation]"
      }
    }
  ],
  "outputs": {
    "jdbcConnString": {
      "type": "string",
      "value": "[concat('jdbc:postgresql://', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('db_server'))).fullyQualifiedDomainName, ':5432')]"
    },
    "dbServerName": {
      "type": "string",
      "value": "[parameters('db_server')]"
    },
    "xrayConnString": {
      "type": "string",
      "value": "[concat('postgres://', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('db_server'))).fullyQualifiedDomainName)]"
    },
    "db_name": {
      "type": "string",
      "value": "[parameters('db_name')]"
    },
    "db_edition": {
      "type": "string",
      "value": "[parameters('db_edition')]"
    },
    "dbUrl": {
      "type": "string",
      "value": "[parameters('manual_db_url')]"
    }
  }
}
